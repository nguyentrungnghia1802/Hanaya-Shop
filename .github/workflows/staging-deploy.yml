name: Staging Deploy

on:
  push:
    branches: [develop]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'
      - '.gitignore'
      - 'LICENSE'
      - '#GUIDE/**'
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test-first:
    runs-on: ubuntu-latest
    name: Run Tests First
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: hanaya_shop_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, redis
          coverage: none

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install PHP dependencies
        run: composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

      - name: Install NPM dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Create .env file
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Configure environment for testing
        run: |
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=hanaya_shop_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=password" >> .env

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Run Tests - MUST PASS BEFORE BUILD
        run: php artisan test

      - name: Run PHP Linting
        run: ./vendor/bin/pint --test

  build-and-push:
    runs-on: ubuntu-latest
    name: Build & Push (Only if tests pass)
    needs: test-first  # 🛡️ CHỈ CHẠY NẾU TESTS PASS
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push staging image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            assassincreed2k1/hanaya-shop:staging-latest
            assassincreed2k1/hanaya-shop:staging-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  notify:
    runs-on: ubuntu-latest
    needs: [test-first, build-and-push]
    if: success()
    steps:
      - name: Staging Deploy Success
        run: |
          echo "✅ ALL STEPS COMPLETED SUCCESSFULLY!"
          echo "🧪 Tests passed ✅"
          echo "🐳 Image built and pushed ✅"
          echo "� Image: assassincreed2k1/hanaya-shop:staging-${{ github.sha }}"
          echo "� Ready for production deployment review"