name: CD Production Deploy

on:
  push:
    branches: [main]
  workflow_dispatch: # Cho phép chạy thủ công

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build & Deploy to Production
    
    environment:
      name: production
      url: http://www.hanayashop.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            assassincreed2k1/hanaya-shop:latest
            assassincreed2k1/hanaya-shop:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Production Server
        run: |
          # Install expect for password authentication
          sudo apt-get install -y expect
          
          # Create expect script for SSH authentication
          cat > deploy_script.exp << 'EXPECTEOF'
          #!/usr/bin/expect -f
          set timeout 60
          spawn ssh -o StrictHostKeyChecking=no ${{ secrets.PRODUCTION_USER }}@${{ secrets.PRODUCTION_HOST }}
          expect "password:"
          send "${{ secrets.PRODUCTION_PASSWORD }}\r"
          expect "$ "
          send "cd /opt/hanaya-shop\r"
          expect "$ "
          send "echo '🚀 Pulling latest Docker image...'\r"
          expect "$ "
          send "docker-compose pull hanaya-shop\r"
          expect "$ "
          send "echo '📦 Restarting containers...'\r"  
          expect "$ "
          send "docker-compose up -d hanaya-shop\r"
          expect "$ "
          send "echo '🧹 Cleaning up old images...'\r"
          expect "$ "
          send "docker system prune -f\r"
          expect "$ "
          send "echo '✅ Deployment completed!'\r"
          expect "$ "
          send "docker ps --filter name=hanaya-shop\r"
          expect "$ "
          send "exit\r"
          expect eof
          EXPECTEOF
          
          # Execute expect script
          chmod +x deploy_script.exp
          ./deploy_script.exp

      # Deployment completed successfully
      - name: Deployment Success
        if: success()
        run: |
          echo "🎉 Deployment to production completed successfully!"
          echo "✅ Docker image: assassincreed2k1/hanaya-shop:${{ github.sha }}"
          echo "🌐 Application URL: http://www.hanayashop.com"