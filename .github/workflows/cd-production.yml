name: CD Production Deploy

on:
  push:
    branches: [main]
  workflow_dispatch: # Cho phép chạy thủ công

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build & Deploy to Production
    
    environment:
      name: production
      url: http://www.hanayashop.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            assassincreed2k1/hanaya-shop:latest
            assassincreed2k1/hanaya-shop:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Setup SSH Key Authentication
        run: |
          # Create .ssh directory with proper permissions
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Setup SSH private key with proper format and permissions
          echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # Add server to known hosts to avoid fingerprint prompts
          ssh-keyscan -H ${{ secrets.PRODUCTION_HOST }} >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Deploy to Production Server
        run: |
          # Deploy using SSH key authentication (best practice)
          ssh -i ~/.ssh/deploy_key -o ConnectTimeout=10 -o UserKnownHostsFile=~/.ssh/known_hosts ${{ secrets.PRODUCTION_USER }}@${{ secrets.PRODUCTION_HOST }} << 'DEPLOYMENT_SCRIPT'
            set -e  # Exit on any error
            
            echo "🔗 Connected to production server successfully!"
            cd /opt/hanaya-shop || { echo "❌ Project directory not found"; exit 1; }
            
            echo "🚀 Pulling latest Docker image..."
            docker-compose pull hanaya-shop || { echo "❌ Failed to pull image"; exit 1; }
            
            echo "📦 Restarting containers with zero downtime..."
            docker-compose up -d hanaya-shop || { echo "❌ Failed to start containers"; exit 1; }
            
            echo "🧹 Cleaning up old Docker images..."
            docker system prune -f || echo "⚠️  Cleanup failed but continuing..."
            
            echo "🔍 Verifying deployment..."
            if docker ps --filter name=hanaya-shop | grep -q "Up"; then
              echo "✅ Deployment successful! Container is running."
              docker ps --filter name=hanaya-shop --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
            else
              echo "❌ Deployment failed! Container not running."
              exit 1
            fi
            
            echo "🎉 Production deployment completed successfully!"
          DEPLOYMENT_SCRIPT

      # Deployment completed successfully
      - name: Deployment Success
        if: success()
        run: |
          echo "🎉 Deployment to production completed successfully!"
          echo "✅ Docker image: assassincreed2k1/hanaya-shop:${{ github.sha }}"
          echo "🌐 Application URL: http://www.hanayashop.com"