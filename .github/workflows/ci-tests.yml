name: CI Tests

on:
  push:
    branches: 
      - develop
      - main
      - 'feature/**'
      - 'hotfix/**'
  pull_request:
    branches: 
      - develop
      - main

jobs:
  debug-info:
    runs-on: ubuntu-latest
    name: Environment Debug
    steps:
      - name: Debug Info
        run: |
          echo "🔍 Workflow Debug Information"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
          echo "Repository: ${{ github.repository }}"
          echo "Event: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          
      - name: Check Secrets (Production only)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "🔑 Checking production secrets availability..."
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "❌ DOCKERHUB_USERNAME secret is missing"
          else
            echo "✅ DOCKERHUB_USERNAME secret is available"
          fi
          
          if [ -z "${{ secrets.PRODUCTION_SSH_KEY }}" ]; then
            echo "❌ PRODUCTION_SSH_KEY secret is missing"
          else
            echo "✅ PRODUCTION_SSH_KEY secret is available"
          fi
  tests:
    runs-on: ubuntu-latest
    name: Laravel Tests

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: hanaya_shop_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, redis
          coverage: none

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: dependencies-composer-${{ hashFiles('composer.lock') }}

      - name: Install PHP dependencies
        run: composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

      - name: Install NPM dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Create .env file
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Configure environment for testing
        run: |
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=hanaya_shop_test" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=password" >> .env
          echo "REDIS_HOST=127.0.0.1" >> .env
          echo "REDIS_PORT=6379" >> .env
          echo "CACHE_DRIVER=redis" >> .env
          echo "SESSION_DRIVER=redis" >> .env
          echo "QUEUE_CONNECTION=redis" >> .env

      - name: Run database migrations
        run: php artisan migrate --force

      - name: Seed database
        run: php artisan db:seed --force

      - name: Run PHP Linting
        run: ./vendor/bin/pint --test

      - name: Run PHP Tests
        run: php artisan test

      - name: Check for security vulnerabilities
        run: composer audit

  docker-build-test:
    runs-on: ubuntu-latest
    name: Docker Build Test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (test only)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: hanaya-shop:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --rm -d --name hanaya-test hanaya-shop:test
          sleep 10
          docker logs hanaya-test
          docker stop hanaya-test